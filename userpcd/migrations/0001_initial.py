# Generated by Django 5.2.1 on 2025-05-25 23:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_carga_categorias_deficiencia'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('curriculo', 'Currículo'), ('laudo', 'Laudo Médico')], max_length=20)),
                ('arquivo', models.FileField(upload_to='documentos/')),
                ('nome_original', models.CharField(max_length=255)),
                ('cid_10', models.CharField(blank=True, help_text='Para laudos médicos', max_length=10)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado')], default='pendente', max_length=20)),
                ('data_upload', models.DateTimeField(auto_now_add=True)),
                ('observacoes', models.TextField(blank=True)),
                ('pcd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='core.pcdprofile')),
            ],
            options={
                'ordering': ['-data_upload'],
            },
        ),
        migrations.CreateModel(
            name='Notificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('candidatura', 'Candidatura'), ('documento', 'Documento'), ('sistema', 'Sistema')], max_length=20)),
                ('titulo', models.CharField(max_length=200)),
                ('mensagem', models.TextField()),
                ('lida', models.BooleanField(default=False)),
                ('criada_em', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-criada_em'],
            },
        ),
        migrations.CreateModel(
            name='PerfilPCDExtendido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cep', models.CharField(blank=True, max_length=9)),
                ('rua', models.CharField(blank=True, max_length=255)),
                ('numero', models.CharField(blank=True, max_length=20)),
                ('complemento', models.CharField(blank=True, max_length=100)),
                ('bairro', models.CharField(blank=True, max_length=100)),
                ('cidade', models.CharField(blank=True, max_length=100)),
                ('uf', models.CharField(blank=True, max_length=2)),
                ('status_medico', models.CharField(choices=[('pendente', 'Pendente'), ('enquadravel', 'Enquadrável'), ('sugestivo', 'Sugestivo'), ('nao_enquadravel', 'Não Enquadrável')], default='pendente', max_length=20)),
                ('percentual_completude', models.IntegerField(default=50)),
                ('pcd_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_extendido', to='core.pcdprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Vaga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('modalidade', models.CharField(choices=[('presencial', 'Presencial'), ('remoto', 'Remoto'), ('hibrido', 'Híbrido')], max_length=20)),
                ('cidade', models.CharField(max_length=100)),
                ('uf', models.CharField(max_length=2)),
                ('salario_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salario_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('requisitos', models.TextField()),
                ('beneficios', models.TextField(blank=True)),
                ('acessivel', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('ativa', 'Ativa'), ('pausada', 'Pausada'), ('encerrada', 'Encerrada')], default='ativa', max_length=20)),
                ('criada_em', models.DateTimeField(auto_now_add=True)),
                ('atualizada_em', models.DateTimeField(auto_now=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vagas', to='core.empresa')),
            ],
            options={
                'ordering': ['-criada_em'],
            },
        ),
        migrations.CreateModel(
            name='Candidatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em_analise', 'Em Análise'), ('entrevista', 'Entrevista Agendada'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado')], default='pendente', max_length=20)),
                ('data_candidatura', models.DateTimeField(auto_now_add=True)),
                ('atualizada_em', models.DateTimeField(auto_now=True)),
                ('observacoes', models.TextField(blank=True)),
                ('pcd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidaturas', to='core.pcdprofile')),
                ('vaga', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidatos', to='userpcd.vaga')),
            ],
            options={
                'ordering': ['-data_candidatura'],
                'unique_together': {('pcd', 'vaga')},
            },
        ),
    ]
